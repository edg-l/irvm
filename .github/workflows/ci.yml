name: CI

on:
    push:
        branches: [master]
    pull_request:
    merge_group:
        types: [checks_requested]

jobs:
    check:
        name: clippy
        runs-on: ubuntu-latest
        env:
            LLVM_SYS_191_PREFIX: /usr/lib/llvm-20/
        steps:
        - uses: actions/checkout@v4
        - uses: dtolnay/rust-toolchain@stable
          with:
            components: rustfmt, clippy
        - uses: Swatinem/rust-cache@v2
        - name: add llvm deb repository
          uses: myci-actions/add-deb-repo@11
          with:
                repo: deb http://apt.llvm.org/noble/ llvm-toolchain-noble-20 main
                repo-name: llvm-repo
                keys-asc: https://apt.llvm.org/llvm-snapshot.gpg.key
        - name: Install LLVM
          run: sudo apt-get install llvm-20 llvm-20-dev llvm-20-runtime clang-20 clang-tools-20 lld-20 libpolly-20-dev
        - name: Clippy
          run: make check

    fmt:
        name: rustfmt
        runs-on: ubuntu-latest
        steps:
        - uses: actions/checkout@v3
        - uses: dtolnay/rust-toolchain@stable
          with:
            components: rustfmt
        - run: cargo fmt --all -- --check

    test:
        name: test (linux, amd64)
        runs-on: ubuntu-latest
        env:
            LLVM_SYS_190_PREFIX: /usr/lib/llvm-20/
            RUST_LOG: debug
        steps:
        - uses: actions/checkout@v4
        - name: Setup rust env
          uses: dtolnay/rust-toolchain@stable
        - name: Retreive cached dependecies
          uses: Swatinem/rust-cache@v2
        - name: add llvm deb repository
          uses: myci-actions/add-deb-repo@11
          with:
            repo: deb http://apt.llvm.org/noble/ llvm-toolchain-noble-20 main
            repo-name: llvm-repo
            keys-asc: https://apt.llvm.org/llvm-snapshot.gpg.key
        - name: Install LLVM
          run: sudo apt-get install llvm-20 llvm-20-dev llvm-20-runtime clang-20 clang-tools-20 lld-20 libpolly-20-dev
        - name: Install Link deps
          run: sudo apt-get install libc-dev build-essential
        - name: test
          run: cargo test --workspace
